---
name: registry

packages:
  - registry

templates:
  bin/post-start: bin/post-start
  bin/registry_ctl: bin/registry_ctl
  bin/registry_garbage_collect: bin/registry_garbage_collect
  config/cloudfront_key.pem: config/cloudfront_key.pem
  config/gcs_service_account_key.json: config/gcs_service_account_key.json
  config/registry.yml: config/registry.yml
  config/registry_htpasswd: config/registry_htpasswd
  config/registry_tls_ca.pem: config/registry_tls_ca.pem
  config/registry_tls_cert.pem: config/registry_tls_cert.pem
  config/registry_tls_key.pem: config/registry_tls_key.pem
  config/rootcertbundle.pem: config/rootcertbundle.pem
  config/schema1_signing_key.pem: config/schema1_signing_key.pem

provides:
  - name: registry
    type: registry
    properties:
      - registry.http.port

consumes:
  - name: redis
    type: redis
    optional: true

properties:
  registry.log.level:
    description: "Granularity at which registry operations are logged (error, warn, info, or debug)"
    default: info
  registry.log.formatter:
    description: "Formatter overrides the default formatter with another ('text', 'json' and 'logstash')"
  registry.log.fields:
    description: "A map of field names to values. These are added to every log line for the context"

  registry.log.accesslog.disabled:
    description: "Disable access logging"

  registry.log.hooks.mail.levels:
    description: "List of levels to notify"
  registry.log.hooks.mail.from:
    description: "SMTP From"
  registry.log.hooks.mail.to:
    description: "List of SMTP To"
  registry.log.hooks.mail.smtp.addr:
    description: "SMTP address"
  registry.log.hooks.mail.smtp.username:
    description: "SMTP username"
  registry.log.hooks.mail.smtp.password:
    description: "SMTP password"
  registry.log.hooks.mail.smtp.insecure:
    description: "SMTP insecure"

  registry.storage.driver:
    description: "Storage backend to use (inmemory, filesystem, azure, gcs, s3, swift, oss)"

  registry.storage.filesystem.max_threads:
    description: "The maximum number of simultaneous blocking filesystem operations permitted within the registry"

  registry.storage.azure.account_name:
    description: "Name of the Azure Storage Account"
  registry.storage.azure.account_key:
    description: "Primary or Secondary Key for the Storage Account"
  registry.storage.azure.container:
    description: "Name of the Azure root storage container in which all registry data will be stored"
  registry.storage.azure.realm:
    description: "Domain name suffix for the Storage Service API endpoint"

  registry.storage.gcs.bucket:
    description: "Storage bucket name"
  registry.storage.gcs.service_account_key:
    description: "A private service account key file in JSON format"
  registry.storage.gcs.root_directory:
    description: "This is a prefix that will be applied to all Google Cloud Storage keys to allow you to segment data in your bucket if necessary"
  registry.storage.gcs.chunksize:
    description: "This is the chunk size used for uploading large blobs, must be a multiple of 256*1024"

  registry.storage.s3.access_key:
    description: "Your AWS Access Key"
  registry.storage.s3.secret_key:
    description: "Your AWS Secret Key"
  registry.storage.s3.region:
    description: "The AWS region in which your bucket exists"
  registry.storage.s3.region_endpoint:
    description: "Endpoint for S3 compatible storage services"
  registry.storage.s3.bucket:
    description: "The bucket name in which you want to store the registry's data"
  registry.storage.s3.encrypt:
    description: "Specifies whether the registry stores the image in encrypted format or not"
  registry.storage.s3.keyid:
    description: "Optional KMS key ID to use for encryption"
  registry.storage.s3.secure:
    description: "Indicates whether to use HTTPS instead of HTTP"
  registry.storage.s3.v4auth:
    description: "Indicates whether the registry uses Version 4 of AWS's authentication"
  registry.storage.s3.chunksize:
    description: "The S3 API requires multipart upload chunks to be at least 5MB. This value should be a number that is larger than 5*1024*1024"
  registry.storage.s3.multipart_copy_chunksize:
    description: "The default chunk size for all but the last Upload Part - Copy operation of a multipart copy"
  registry.storage.s3.multipart_copy_max_concurrency:
    description: "The default maximum number of concurrent Upload Part - Copy operations for a multipart copy"
  registry.storage.s3.multipart_copy_threshold_size:
    description: "The default object size above which multipart copy will be used"
  registry.storage.s3.root_directory:
    description: "This is a prefix that will be applied to all S3 keys to allow you to segment data in your bucket if necessary"
  registry.storage.s3.storage_class:
    description: "The S3 storage class applied to each registry file"

  registry.storage.swift.username:
    description: "Your Openstack user name"
  registry.storage.swift.password:
    description: "Your Openstack password"
  registry.storage.swift.auth_url:
    description: "URL for obtaining an auth token"  
  registry.storage.swift.tenant:
    description: "Your Openstack tenant name. You can either use tenant or tenantid"
  registry.storage.swift.tenant_id:
    description: "Your Openstack tenant id. You can either use tenant or tenantid"
  registry.storage.swift.domain:
    description: "Your Openstack domain name for Identity v3 API. You can either use domain or domainid"
  registry.storage.swift.domain_id:
    description: "Your Openstack domain id for Identity v3 API. You can either use domain or domainid"
  registry.storage.swift.trust_id:
    description: "Your Openstack trust id for Identity v3 API"
  registry.storage.swift.region:
    description: "The Openstack region in which your container exists"
  registry.storage.swift.auth_version:
    description: "Specify the OpenStack Auth's version,for example 3. By default the driver will autodetect the auth's version from the AuthURL"
  registry.storage.swift.container:
    description: "The name of your Swift container where you wish to store the registry's data. The driver creates the named container during its initialization"
  registry.storage.swift.prefix:
    description: "This is a prefix that will be applied to all Swift keys to allow you to segment data in your container if necessary"
  registry.storage.swift.endpoint_type:
    description: "The endpoint type used when connecting to swift"
  registry.storage.swift.insecure_skip_verify:
    description: "true to skip TLS verification"
  registry.storage.swift.chunksize:
    description: "Size of the data segments for the Swift Dynamic Large Objects"
  registry.storage.swift.access_key:
    description: "The access key to generate temporary URLs"
  registry.storage.swift.secret_key:
    description: "The secret key used to generate temporary URLs"
  registry.storage.swift.tempurl_container_key:
    description: "Specify whether to use container secret key to generate temporary URL when set to true, or the account secret key otherwise"

  registry.storage.oss.access_key_id:
    description: "Your access key ID"
  registry.storage.oss.access_key_secret:
    description: "Your access key secret"
  registry.storage.oss.region:
    description: "The name of the OSS region in which you would like to store objects"
  registry.storage.oss.endpoint:
    description: "An endpoint"
  registry.storage.oss.internal:
    description: "An internal endpoint or the public endpoint for OSS access"
  registry.storage.oss.bucket:
    description: "The name of your OSS bucket where you wish to store objects"
  registry.storage.oss.encrypt:
    description: "Specifies whether you would like your data encrypted on the server side"
  registry.storage.oss.secure:
    description: "Specifies whether to transfer data to the bucket over ssl or not"
  registry.storage.oss.chunksize:
    description: "The default part size for multipart uploads (performed by WriteStream) to OSS"
  registry.storage.oss.root_directory:
    description: "The root directory tree in which to store all registry files"

  registry.storage.delete.enabled:
    description: "Enable the deletion of image blobs and manifests by digest"

  registry.storage.maintenance.uploadpurging.enabled:
    description: "Set to true to enable upload purging"
  registry.storage.maintenance.uploadpurging.age:
    description: "Upload directories which are older than this age will be deleted"
  registry.storage.maintenance.uploadpurging.interval:
    description: "The interval between upload directory purging"
  registry.storage.maintenance.uploadpurging.dryrun:
    description: "Set dryrun to true to obtain a summary of what directories will be deleted"

  registry.storage.maintenance.readonly.enabled:
    description: "If the readonly section has enabled set to true, clients will not be allowed to write to the registry"

  registry.storage.redirect.disable:
    description: "Disable redirects from content backends"

  registry.auth.silly.realm:
    description: "The realm in which the registry server authenticates"
  registry.auth.silly.service:
    description: "The service being authenticated"

  registry.auth.token.realm:
    description: "The realm in which the registry server authenticates"
  registry.auth.token.service:
    description: "The service being authenticated"
  registry.auth.token.issuer:
    description: "The name of the token issuer. The issuer inserts this into the token so it must match the value configured for the issuer"
  registry.auth.token.rootcertbundle:
    description: "The root certificate bundle. This bundle contains the public part of the certificates used to sign authentication tokens"

  registry.auth.htpasswd.realm:
    description: "The realm in which the registry server authenticates"
  registry.auth.htpasswd.htpasswd:
    description: "The htpasswd file contents"

  registry.middleware.cloudfront.base_url:
    description: "The URL at which Cloudfront is served"
  registry.middleware.cloudfront.private_key:
    description: "The private key for Cloudfront, provided by AWS"
  registry.middleware.cloudfront.keypair_id:
    description: "The key pair ID provided by AWS"
  registry.middleware.cloudfront.duration:
    description: "An integer and unit for the duration of the Cloudfront session"

  registry.middleware.redirect.base_url:
    description: "The URL at which layers are served"

  registry.reporting.bugsnag.api_key:
    description: "The API Key provided by Bugsnag"
  registry.reporting.bugsnag.release_stage:
    description: "Tracks where the registry is deployed, using a string like production, staging, or development"
  registry.reporting.bugsnag.endpoint:
    description: "The enterprise Bugsnag endpoint"

  registry.reporting.newrelic.license_key:
    description: "License key provided by New Relic"
  registry.reporting.newrelic.name:
    description: "New Relic application name"
  registry.reporting.newrelic.verbose:
    description: "Set to true to enable New Relic debugging output on stdout"

  registry.http.net:
    description: "The network used to create a listening socket. Known networks are unix and tcp"
    default: tcp
  registry.http.listen_addr:
    description: "The address for which the server should accept connections"
    default: 127.0.0.1
  registry.http.port:
    description: "The port for which the server should accept connections"
    default: 5000
  registry.http.prefix:
    description: "If the server does not run at the root path, set this to the value of the prefix. The root path is the section before v2. It requires both preceding and trailing slashes, such as in the example /path/"
  registry.http.host:
    description: "A fully-qualified URL for an externally-reachable address for the registry. If present, it is used when creating generated URLs. Otherwise, these URLs are derived from client requests"
  registry.http.secret:
    description: "A random piece of data used to sign state that may be stored with the client to protect against tampering. For production environments you should generate a random piece of data using a cryptographically secure random generator. If you omit the secret, the registry will automatically generate a secret when it starts"
  registry.http.relative_urls:
    description: "If true, the registry returns relative URLs in Location headers. The client is responsible for resolving the correct URL"

  registry.http.tls.cert:
    description: "x509 certificate"
  registry.http.tls.key:
    description: "x509 private key"
  registry.http.tls.ca:
    description: "x509 CA"

  registry.http.tls.letsencrypt.email:
    description: "The email address used to register with Let’s Encrypt"

  registry.http.debug.listen_addr:
    description: "The address for which the debug server should accept connections"
  registry.http.debug.port:
    description: "The port for which the debug server should accept connections"

  registry.http.headers:
    description: "Use it to specify headers that the HTTP server should include in responses"

  registry.http.http2.disabled:
    description: "If true, then http2 support is disabled"

  registry.notifications.endpoint.name:
    description: "A human-readable name for the service"
  registry.notifications.endpoint.url:
    description: "The URL to which events should be published"
  registry.notifications.endpoint.headers:
    description: "A list of static headers to add to each request"
  registry.notifications.endpoint.disabled:
    description: "If true, notifications are disabled for the service"
  registry.notifications.endpoint.timeout:
     description: "A value for the HTTP timeout"
  registry.notifications.endpoint.threshold:
    description: "An integer specifying how long to wait before backing off a failure"
  registry.notifications.endpoint.backoff:
    description: "How long the system backs off before retrying after a failure"
  registry.notifications.endpoint.ignored_media_types:
    description: "A list of target media types to ignore"

  registry.redis.db:
    description: "The name of the database to use for each connection"
  registry.redis.dial_timeout:
    description: "The timeout for connecting to the Redis instance"
  registry.redis.read_timeout:
    description: "The timeout for reading from the Redis instance"
  registry.redis.write_timeout:
    description: "The timeout for writing to the Redis instance"

  registry.redis.pool.max_idle:
    description: "The maximum number of idle connections in the pool"
  registry.redis.pool.max_active:
    description: "The maximum number of connections which can be open before blocking a connection request"
  registry.redis.pool.idle_timeout:
    description: "How long to wait before closing inactive connections"

  registry.health.storagedriver.enabled:
    description: "Set to true to enable storage driver health checks or false to disable them"
  registry.health.storagedriver.interval:
    description: "How long to wait between repetitions of the storage driver health check. A positive integer and an optional suffix indicating the unit of time. The suffix is one of ns, us, ms, s, m, or h"
  registry.health.storagedriver.threshold:
    description: "A positive integer which represents the number of times the check must fail before the state is marked as unhealthy"

  registry.health.http.uri:
    description: "The URI to check"
  registry.health.http.headers:
    description: "A list of static headers to add to each request."
  registry.health.http.status_code:
    description: "The expected status code from the HTTP URI"
  registry.health.http.timeout:
    description: "How long to wait before timing out the HTTP request"
  registry.health.http.interval:
    description: "How long to wait before repeating the check"
  registry.health.http.threshold:
    description: "The number of times the check must fail before the state is marked as unhealthy"

  registry.health.redis.timeout:
    description: "How long to wait before timing out the Redis TCP connection"
  registry.health.redis.interval:
    description: "How long to wait between repetitions of the Redis check"
  registry.health.redis.threshold:
    description: "The number of times the Redis check must fail before the state is marked as unhealthy"

  registry.health.tcp.addr:
    description: "The TCP address and port to connect to"
  registry.health.tcp.timeout:
    description: "How long to wait before timing out the TCP connection"
  registry.health.tcp.interval:
    description: "How long to wait between repetitions of the check"
  registry.health.tcp.threshold:
    description: "The number of times the check must fail before the state is marked as unhealthy"

  registry.proxy.remote_url:
    description: "The URL for the repository on Docker Hub"
  registry.proxy.username:
    description: "The username registered with Docker Hub which has access to the repository"
  registry.proxy.password:
    description: "The password used to authenticate to Docker Hub using the username specified in username"

  registry.compatibility.schema1.signing_key:
    description: "The signing private key used to add signatures to schema1 manifests"

  registry.validation.enabled:
    description: "Enable the other options in the validation section"

  registry.validation.manifests.allow_urls:
    description: "List of URL's regular expressions that allows them in pushed manifests"
  registry.validation.manifests.deny_urls:
    description: "List of URL's regular expressions that restricts them in pushed manifests"

  registry.garbage_collect.hourly:
    description: "Run garbage collection process hourly"
    default: false
  registry.garbage_collect.daily:
    description: "Run garbage collection process daily"
    default: false
  registry.garbage_collect.weekly:
    description: "Run garbage collection process weekly"
    default: false

  env.http_proxy:
    description: "HTTP proxy to use"
  env.https_proxy:
    description: "HTTPS proxy to use"
  env.no_proxy:
    description: "List of comma-separated hosts that should skip connecting to the proxy"
